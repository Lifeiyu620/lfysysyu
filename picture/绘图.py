#  BPRMF模型
import matplotlib.pyplot as plt
model1=[0.4140,0.3020]
model2=[0.4818,0.3830]
# 提取的数据
epochs = range(1, 100)  # 从1到100的epoch
loss_values = [
    0.6690, 0.5213, 0.4521, 0.4076, 0.3687, 0.3308, 0.2947, 0.2623, 0.2315, 0.2061,
    0.1813, 0.1600, 0.1419, 0.1268, 0.1116, 0.1016, 0.0913, 0.0837, 0.0764, 0.0696,
    0.0637, 0.0597, 0.0559, 0.0523, 0.0499, 0.0476, 0.0460, 0.0441, 0.0422, 0.0409,
    0.0395, 0.0388, 0.0379, 0.0367, 0.0359, 0.0361, 0.0348, 0.0350, 0.0340, 0.0338,
    0.0333, 0.0335, 0.0329, 0.0328, 0.0320, 0.0324, 0.0314, 0.0312, 0.0314, 0.0309,
    0.0314, 0.0305, 0.0306, 0.0301, 0.0305, 0.0298, 0.0298, 0.0299, 0.0299, 0.0292,
    0.0300, 0.0292, 0.0287, 0.0285, 0.0290, 0.0289, 0.0285, 0.0283, 0.0283, 0.0283,
    0.0280, 0.0282, 0.0283, 0.0280, 0.0276, 0.0278, 0.0276, 0.0277, 0.0271, 0.0279,
    0.0275, 0.0269, 0.0272, 0.0278, 0.0271, 0.0271, 0.0271, 0.0270, 0.0268, 0.0270,
    0.0266, 0.0270, 0.0269, 0.0266, 0.0269, 0.0263, 0.0262, 0.0264, 0.0268
]
hr_values = [
    0.2094, 0.2411, 0.2579, 0.2772, 0.2951, 0.3069, 0.3184, 0.3314, 0.3411, 0.3480,
    0.3539, 0.3585, 0.3648, 0.3696, 0.3728, 0.3768, 0.3788, 0.3804, 0.3831, 0.3866,
    0.3876, 0.3876, 0.3878, 0.3905, 0.3903, 0.3905, 0.3908, 0.3928, 0.3926, 0.3940,
    0.3965, 0.3967, 0.3983, 0.3993, 0.3985, 0.3990, 0.4003, 0.4015, 0.4013, 0.3994,
    0.4009, 0.4017, 0.4035, 0.4047, 0.4056, 0.4032, 0.4051, 0.4070, 0.4064, 0.4077,
    0.4060, 0.4070, 0.4064, 0.4077, 0.4084, 0.4107, 0.4123, 0.4116, 0.4110, 0.4109,
    0.4111, 0.4108, 0.4101, 0.4105, 0.4117, 0.4107, 0.4103, 0.4113, 0.4116, 0.4127,
    0.4135, 0.4126, 0.4113, 0.4109, 0.4131, 0.4139, 0.4139, 0.4118, 0.4122, 0.4140,
    0.4151, 0.4128, 0.4116, 0.4122, 0.4123, 0.4125, 0.4135, 0.4118, 0.4115, 0.4146,
    0.4150, 0.4154, 0.4126, 0.4140, 0.4135, 0.4142, 0.4139, 0.4128, 0.4140
]
ndcg_values = [
    0.1341, 0.1558, 0.1716, 0.1893, 0.2028, 0.2142, 0.2234, 0.2333, 0.2418, 0.2485,
    0.2531, 0.2571, 0.2617, 0.2646, 0.2666, 0.2691, 0.2712, 0.2726, 0.2745, 0.2767,
    0.2780, 0.2782, 0.2788, 0.2803, 0.2791, 0.2796, 0.2807, 0.2819, 0.2823, 0.2832,
    0.2848, 0.2854, 0.2865, 0.2873, 0.2866, 0.2877, 0.2886, 0.2900, 0.2897, 0.2884,
    0.2886, 0.2895, 0.2900, 0.2913, 0.2923, 0.2921, 0.2928, 0.2933, 0.2939, 0.2946,
    0.2934, 0.2940, 0.2935, 0.2940, 0.2951, 0.2963, 0.2972, 0.2969, 0.2964, 0.2966,
    0.2964, 0.2971, 0.2991, 0.2989, 0.2984, 0.2988, 0.2989, 0.2995, 0.2999, 0.2984,
    0.2982, 0.2986, 0.2997, 0.2999, 0.2999, 0.2996, 0.2993, 0.3002, 0.3006, 0.2998,
    0.2991, 0.2999, 0.3002, 0.3000, 0.3004, 0.2993, 0.3003, 0.3016, 0.3022, 0.3013,
    0.3002, 0.3014, 0.3012, 0.3013, 0.3009, 0.3015, 0.3019,0.3019,0.3020
]



# 绘制图表
plt.figure(figsize=(14, 5))

# 绘制loss曲线
plt.subplot(1, 3, 1)
plt.plot(epochs, loss_values, label='Loss')
plt.title('Training Loss')
plt.xlabel('Epochs')
plt.ylabel('Loss')
plt.legend()

# 绘制HR@5曲线
plt.subplot(1, 3, 2)
plt.plot(epochs, hr_values, label='HR@5')
plt.title('HR@5')
plt.xlabel('Epochs')
plt.ylabel('HR@5')

# 绘制NDCG曲线
plt.subplot(1,3, 3)
plt.plot(epochs, ndcg_values, label='NDCG')
plt.title('NDCG')
plt.xlabel('Epochs')
plt.ylabel('NDCG')
plt.legend()

plt.tight_layout()
plt.show()


import matplotlib.pyplot as plt

# 提取的数据
epochs = list(range(0, 20))  # 从0到19的epoch
loss_values = [
    0.68386447, 0.65642506, 0.60560471, 0.53980649, 0.46933520, 0.40880233,
    0.37564638, 0.34356585, 0.31976676, 0.31077915, 0.30099329, 0.28553969,
    0.27066207, 0.26188892, 0.25560039, 0.24842282, 0.24056083, 0.23175457,
    0.22267745, 0.21579614
]
hr5_values = [
    0.0606, 0.0644, 0.0694, 0.0882, 0.1407, 0.1671, 0.1735, 0.1649, 0.1423,
    0.1219, 0.1177, 0.1241, 0.1394, 0.1601, 0.1805, 0.2016, 0.2287, 0.2648,
    0.3083, 0.3483
]
hr10_values = [
    0.1172, 0.1275, 0.1441, 0.1771, 0.2601, 0.3033, 0.3127, 0.3000, 0.2732,
    0.2485, 0.2410, 0.2549, 0.2879, 0.3252, 0.3572, 0.3849, 0.4213, 0.4646,
    0.5257, 0.5856
]
ndcg_values = [
    0.2163, 0.2193, 0.2246, 0.2390, 0.2686, 0.2842, 0.2905, 0.2877, 0.2763,
    0.2674, 0.2660, 0.2700, 0.2790, 0.2896, 0.3003, 0.3110, 0.3250, 0.3424,
    0.3635, 0.3830
]

# 绘制图表
plt.figure(figsize=(14, 5))

# 绘制loss曲线
plt.subplot(1, 3, 1)
plt.plot(epochs, loss_values, label='Loss')
plt.title('Training Loss')
plt.xlabel('Epochs')
plt.ylabel('Loss')
plt.legend()

# 绘制HR@5曲线
plt.subplot(1 , 3, 2)
plt.plot(epochs, hr5_values, label='HR@5')
plt.title('HR@5')
plt.xlabel('Epochs')
plt.ylabel('HR@5')
plt.legend()

# 绘制HR@10曲线


# 绘制NDCG曲线
plt.subplot(1, 3, 3)
plt.plot(epochs, ndcg_values, label='NDCG')
plt.title('NDCG')
plt.xlabel('Epochs')
plt.ylabel('NDCG')
plt.legend()

plt.tight_layout()
plt.show()


import matplotlib.pyplot as plt

# 提取的数据
epochs = list(range(101))  # 从0到100的epoch
loss_values = [
    0.68804872, 0.62839329, 0.56632799, 0.50641179, 0.45794237, 0.43216452,
    0.42577103, 0.41856074, 0.40154073, 0.38458771, 0.36897770, 0.35346475,
    0.34105307, 0.33167735, 0.32276654, 0.31312811, 0.30349952, 0.29434538,
    0.28537503, 0.27699861, 0.26920909, 0.26171926, 0.25366381, 0.24504690,
    0.23711173, 0.23044211, 0.22412115, 0.21749030, 0.21184234, 0.20781717,
    0.20404281, 0.19960745, 0.19514385, 0.19124079, 0.18789379, 0.18473861,
    0.18145886, 0.17809448, 0.17480403, 0.17173113, 0.16885455, 0.16609968,
    0.16354063, 0.16133195, 0.15939648, 0.15756613, 0.15583251, 0.15423904,
    0.15272601, 0.15124176, 0.14979030, 0.14840882, 0.14717478, 0.14611878,
    0.14521781, 0.14432396, 0.14339450, 0.14239232, 0.14131983, 0.14027146,
    0.13931043, 0.13839498, 0.13751082, 0.13661088, 0.13573754, 0.13495421,
    0.13423580, 0.13355169, 0.13287205, 0.13221063, 0.13159463, 0.13101384,
    0.13042426, 0.12981410, 0.12918754, 0.12859872, 0.12807213, 0.12757637,
    0.12709129, 0.12661110, 0.12613504, 0.12567097, 0.12521380, 0.12476015,
    0.12431706, 0.12388283, 0.12344155, 0.12299588, 0.12255264, 0.12212269,
    0.12170547, 0.12129667, 0.12089280, 0.12049034, 0.12009335, 0.11970092,
    0.11931504, 0.11893916, 0.11856645, 0.11820205, 0.11784700
]
hr5_values = [
    0.0737, 0.0947, 0.1023, 0.0933, 0.0874, 0.0868, 0.0956, 0.1143, 0.1444, 0.1754,
    0.1843, 0.1879, 0.1921, 0.1990, 0.2099, 0.2244, 0.2311, 0.2365, 0.2466, 0.2638,
    0.2998, 0.3228, 0.3229, 0.3174, 0.3208, 0.3290, 0.3376, 0.3509, 0.3750, 0.3951,
    0.4111, 0.4211, 0.4282, 0.4342, 0.4432, 0.4516, 0.4637, 0.4760, 0.4886, 0.4960,
    0.5050, 0.5140, 0.5214, 0.5299, 0.5394, 0.5469, 0.5547, 0.5601, 0.5646, 0.5682,
    0.5708, 0.5705, 0.5716, 0.5726, 0.5750, 0.5765, 0.5783, 0.5812, 0.5862, 0.5890,
    0.5924, 0.5947, 0.5975, 0.6010, 0.6031, 0.6056, 0.6077, 0.6097, 0.6119, 0.6137,
    0.6154, 0.6187, 0.6204, 0.6221, 0.6244, 0.6254, 0.6265, 0.6275, 0.6296, 0.6302,
    0.6302, 0.6310, 0.6320, 0.6324, 0.6332, 0.6339, 0.6344, 0.6343, 0.6355, 0.6365,
    0.6380, 0.6391, 0.6411, 0.6429, 0.6439, 0.6444, 0.6457, 0.6475, 0.6485, 0.6493,
    0.6508
]
ndcg_values = [
    0.2323, 0.2493, 0.2536, 0.2488, 0.2454, 0.2460, 0.2501, 0.2595, 0.2759, 0.2944,
    0.3013, 0.3038, 0.3057, 0.3085, 0.3140, 0.3201, 0.3251, 0.3281, 0.3328, 0.3405,
    0.3551, 0.3674, 0.3685, 0.3677, 0.3706, 0.3747, 0.3780, 0.3835, 0.3943, 0.4036,
    0.4118, 0.4164, 0.4207, 0.4248, 0.4293, 0.4344, 0.4403, 0.4476, 0.4539, 0.4597,
    0.4645, 0.4689, 0.4722, 0.4752, 0.4795, 0.4840, 0.4877, 0.4905, 0.4936, 0.4956,
    0.4974, 0.4988, 0.4993, 0.4993, 0.4997, 0.5017, 0.5038, 0.5059, 0.5094, 0.5116,
    0.5133, 0.5148, 0.5161, 0.5177, 0.5189, 0.5199, 0.5217, 0.5232, 0.5241, 0.5248,
    0.5252, 0.5255, 0.5265, 0.5272, 0.5280, 0.5287, 0.5295, 0.5300, 0.5304, 0.5310,
    0.5316, 0.5326, 0.5329, 0.5334, 0.5338, 0.5344, 0.5347, 0.5356, 0.5362, 0.5372,
    0.5382, 0.5389, 0.5399, 0.5412, 0.5419, 0.5427, 0.5440, 0.5447, 0.5455, 0.5464,
    0.5470
]

plt.figure(figsize=(14, 5))

# 绘制loss曲线
plt.subplot(1, 3, 1)
plt.plot(epochs, loss_values, label='Loss')
plt.title('Training Loss')
plt.xlabel('Epochs')
plt.ylabel('Loss')
plt.legend()

# 绘制HR@5曲线
plt.subplot(1 , 3, 2)
plt.plot(epochs, hr5_values, label='HR@5')
plt.title('HR@5')
plt.xlabel('Epochs')
plt.ylabel('HR@5')
plt.legend()

# 绘制HR@10曲线


# 绘制NDCG曲线
plt.subplot(1, 3, 3)
plt.plot(epochs, ndcg_values, label='NDCG')
plt.title('NDCG')
plt.xlabel('Epochs')
plt.ylabel('NDCG')
plt.legend()

plt.tight_layout()
plt.show()


import numpy as np
# 模型性能数据
model1 = [0.0268,0.4140, 0.3020]  # Model 1: HR@5, NDCG
model2 = [0.11784700,0.6508, 0.5470]  # Model 2: HR@5, NDCG

# 指标名称
metrics = ['loss','HR@5', 'NDCG']

# 创建条形图
x = np.arange(len(metrics))  # 标签位置
width = 0.35  # 条形图的宽度

fig, ax = plt.subplots()
rects1 = ax.bar(x - width/2, model1, width, label='BPRMF ')
rects2 = ax.bar(x + width/2, model2, width, label='SCMOGNN 2')

# 添加标签、标题和自定义x轴刻度标签
ax.set_ylabel('Scores')
ax.set_title('Model Performance Comparison')
ax.set_xticks(x)
ax.set_xticklabels(metrics)
ax.legend()

# 在条形图上添加数值标签
def autolabel(rects):
    for rect in rects:
        height = rect.get_height()
        ax.annotate(f'{height:.4f}',
                    xy=(rect.get_x() + rect.get_width() / 2, height),
                    xytext=(0, 3),  # 3 points vertical offset
                    textcoords="offset points",
                    ha='center', va='bottom')

autolabel(rects1)
autolabel(rects2)

fig.tight_layout()

# 显示图表
plt.show()